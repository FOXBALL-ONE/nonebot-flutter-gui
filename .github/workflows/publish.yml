# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: 'stable'
          version: 3.22.1

      - name: Install Dependencies
        shell: pwsh
        #        run: dart pub global activate -s path tools/flutter_distributor/packages/flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Setup Inno Setup 6
        shell: pwsh
        run: |-
          ./asset/is.exe /VERYSLIENT
          Copy-Item "./asset/ChineseSimplified.isl" -Destination "C:\Program Files (x86)\Inno Setup 6\Languages"
      - name: Setup 7ZIP
        shell: pwsh
        run: |-
          ./asset/7z2405-x64.exe /S

      - name: Pack EXE Installer & Portable Archive
        run: flutter_distributor package --platform windows --target exe,zip

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Artifact(Dist)
          path: dist

  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: 'stable'
          version: 3.22.1

      - name: Install Dependencies
        run: |-
          sudo apt-get update
          sudo apt-get install curl clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev rpm libayatana-appindicator3-dev patchelf locate libfuse2
          dart pub global activate -s path tool/flutter_distributor/packages/flutter_distributor
          flutter pub get

      - name: Setup AppImageTool
        run: |-
          sudo mv asset/appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
          sudo chmod a+x /usr/local/bin/appimagetool

      - name: Pack Installers
        run: flutter_distributor package --platform linux --targets appimage,deb,rpm

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux Artifact(Dist)
          path: dist

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: 'stable'
          version: 3.22.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install Dependencies
        run: |-
          flutter pub get
          npm install -g appdmg
          dart pub global activate -s path tool/flutter_distributor/packages/flutter_distributor

      - name: Pack DMG Installer
        run: flutter_distributor package --platform macos --target dmg

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MacOS Artifact(Dist)
          path: dist

  publish_releases:
    name: publish
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux
      - macos

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Fetch Version
        run: |
          sudo snap install yq
          nbgui_version=$(yq eval '.version' pubspec.yaml)
          echo "NBGUI_VERSION=$nbgui_version" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install zip curl -y


      - name: Download Build Artifact(Windows)
        uses: actions/download-artifact@v4
        with:
          name: "Windows Artifact(Dist)"
          path: dist/
      - name: Download Build Artifact(Linux)
        uses: actions/download-artifact@v4
        with:
          name: "Linux Artifact(Dist)"
          path: dist/
      - name: Download Build Artifact(MacOS)
        uses: actions/download-artifact@v4
        with:
          name: "MacOS Artifact(Dist)"
          path: dist/
      - name: Rename
        run: |
          mv ./dist/${{ env.NBGUI_VERSION }}/*.exe ./dist/${{ env.NBGUI_VERSION }}/windows-${{ env.NBGUI_VERSION }}-setup.exe
          mv ./dist/${{ env.NBGUI_VERSION }}/*.zip ./dist/${{ env.NBGUI_VERSION }}/windows-${{ env.NBGUI_VERSION }}.zip
          mv ./dist/${{ env.NBGUI_VERSION }}/*.deb ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.deb
          mv ./dist/${{ env.NBGUI_VERSION }}/*.rpm ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.rpm
          mv ./dist/${{ env.NBGUI_VERSION }}/*.AppImage ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.AppImage
          mv ./dist/${{ env.NBGUI_VERSION }}/*.dmg ./dist/${{ env.NBGUI_VERSION }}/macos-${{ env.NBGUI_VERSION }}.dmg
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NBGUI_VERSION }}
          body_path: RELEASE_CHANGELOG.md
          prerelease: false
          draft: true
          generate_release_notes: true
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          files: |
            ./dist/${{ env.NBGUI_VERSION }}/windows-${{ env.NBGUI_VERSION }}-setup.exe
            ./dist/${{ env.NBGUI_VERSION }}/windows-${{ env.NBGUI_VERSION }}.zip
            ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.deb
            ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.rpm
            ./dist/${{ env.NBGUI_VERSION }}/linux-${{ env.NBGUI_VERSION }}.AppImage
            ./dist/${{ env.NBGUI_VERSION }}/macos-${{ env.NBGUI_VERSION }}.dmg

      - name: Update website
        run: |
            sed -i 's/NBGUI.VER/${{ env.NBGUI_VERSION }}/g' website/index.html
            change_date=$(date +%Y.%m.%d)
            sed -i "s/NBGUI.DATE/$change_date/g" website/index.html
            sed -i -e ':a;N;$!ba;s/\n/\\n/g' changelog.txt
            change=$(cat changelog.txt)
            sed -i 's/NBGUI.CHANGELOG/$change/g' website/index.html

      - name: Zip
        run: zip -r nbgui.zip website/*

      - name: Upload Website To Netlify
        run: |
          curl -H "Content-Type: application/zip" \
            -H "Authorization: ${{ secrets.NETLIFY_TOKEN }}" \
            --data-binary "@nbgui.zip" \
            https://api.netlify.com/api/v1/sites/${{ secrets.NETLIFY_SITEID }}/deploys



